План:

Как обычно применяется: producer/consumer (классика), fork/join (наворот над классикой), actors (это пример "без общих ресурсов")
Бонусы: есть read-write locks, есть структуры без ожидания, без блокировок, tsan/valgrind.

Домашнее задание: Thread Pool.
Это чтобы не создавать на каждый чих поток ОС, и сильно ограничить число потоков (и не грузить процессор так сильно).
Сколько угодно producer'ов, фиксированное число consumer'ов. Есть в Java (там вообще всё есть).
Задача - это функция + аргумент void*.
Можно: создать пул, удалить пул, кинуть задачу в пул, подождать выполнения задачи (либо ноль, либо один, либо много раз - пофиг).
Задачи создаёт пользователь.

not sure if bug gone or race condition
